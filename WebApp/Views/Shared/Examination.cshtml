@model IGrouping<int?, Examination>

<table class="table table-sm table-light table-bordered w-auto align-middle">
    <thead>
        <tr>
            <th>
            </th>
            @foreach (var student in Model.Select(x => x.Student).Distinct().OrderBy(s => s.Id))
            {
                <th>
                    @string.Format("{0} {1} {2}", student.LastName, student.FirstName, student.MiddleName)
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var disc in Model.GroupBy(x => x.Discipline).OrderBy(x => x.Key.Id))
        {
            var a = Model.Average(m => m.Mark);
            <tr id="@string.Format("D{0}", disc.Key.Id)">
                <td><strong>@disc.Key.DisciplineName</strong></td>
                @foreach (var mark in disc.OrderBy(x => x.StudentId))
                {
                    <td id="@string.Format("ex{0}",mark.Id)">
                    <div id="@string.Format("edit{0}",mark.Id)" style="display : none;">
                        <input type="number" min="2" max="5" class="form-control m-0 p-0 input-sm" size="1" value="@mark.Id" onblur="endEdit(@mark.Id,true)"/>
                    </div>
                    <div id="@string.Format("label{0}",mark.Id)" class="cursor-pointer w-100 h-100 p-1" ondblclick="beginEdit(@mark.Id)">@mark.Mark</div>
                    </td>
                }
                <td><div id="@string.Format("avgD{0}", disc.Key.Id)">@string.Format("{0}", a.HasValue && a.Value>0 ? Math.Round(a.Value) : "")</div></td>
            </tr>
        }
        <tr>
            <td>
            </td>
            @foreach (var avg in Model.GroupBy(x => x.Student).OrderBy(x => x.Key.Id))
            {
                var a = avg.Average(d => d.Mark);
                <td><div id="@string.Format("avgS{0}-avgDM{1}-avgPr{2}", avg.Key.Id, ViewBag.Module, Model.Key ?? 0)">@string.Format("{0}", a.HasValue && a.Value > 0 ? Math.Round(a.Value) : "")</div></td>
            }
        </tr>
    </tbody>
</table>


