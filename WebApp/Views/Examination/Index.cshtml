@model IEnumerable<WebApp.Models.Examination>

@{
    await Html.RenderPartialAsync("SelectForm", ViewBag.selectFormData, ViewData);
}
@if (Model != null)
{
    <div id="content" class="container w-100 bg-light mt-2">
        <p class="text-center h4 mb-4">@ViewBag.Institution</p>
        <p class="text-center h5">Отчет<br />по @string.Format("{0} практике по профессиональным модулям:", Model.All(x=> x.Discipline.PracticeTypeId.HasValue) ? string.Format("{0}{1}{2}", Model.Any(x=> x.Discipline.PracticeTypeId==1) ? "учебной" : "", Model.Any(x=> x.Discipline.PracticeTypeId==1) && Model.Any(x=> x.Discipline.PracticeTypeId==2) ? " и " : "", Model.Any(x=> x.Discipline.PracticeTypeId==2) ? "производственной " : "") : "преддипломной")</p>
        <p class="text-justify">
            @foreach (var module in Model.Select(x => x.Discipline.Module).Distinct().OrderBy(x=> x.Id))
            {
                    @Html.Raw(string.Format("{0}. {1}<br/>", module.ModuleCode, module.ModuleName));
            }
            <strong>@string.Format("Курс: {0}", ViewBag.Kurs)</strong><br/>
            @if (ViewBag.Kurs > 2)
            {
                    <strong>@string.Format("Семестр: {0}", ViewBag.Semester)</strong>
                    <br />
            }
            <strong>@string.Format("Специальность: {0}", ViewBag.Speciality)</strong>
        </p>
        @{
            int k = 1;
        }
        @foreach (var module in Model.GroupBy(x=> x.Discipline.Module))
        {
            @foreach (var practiceType in module.GroupBy(x=>x.Discipline.PracticeTypeId).OrderBy(x=>x.Key))
            {
                @if(practiceType.Key == null)
                {
                    <p class="h5 text-justify">@string.Format("{0} {1}.", k, module.Key.ModuleCode, module.Key.ModuleName)</p>
                }
                else
                {
                    <p class="h5 text-justify">@string.Format(@"{0}. Виды и объем работ, оценка за выполненные обучающимся работы во время {1} практики по {2} {3}", 
                    k, practiceType.Key switch { 1 => "учебной", 2 => "производственной", _ => "" }, module.Key.ModuleCode, module.Key.ModuleName)
                    </p>
                }
                ViewBag.Module = module.Key.Id;
                await Html.RenderPartialAsync("Examination", practiceType, ViewData);
                k++;
            }
        }
    </div>
    <div class="container bg-light">
        <form action="@Url.Action("Export", "Examination")" method="post">
            <input type="hidden" name="dt" id="dt" value=""/>
            <button type="submit" class="btn btn-sm btn-primary" onclick="Export()">Скачать</button>
        </form>
    </div>

    <div class="modal fade" id="studentModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form action="javascript:void(0);" onsubmit="addStudent()">
                    <div class="modal-header">
                        <h5 class="modal-title">Студент</h5>
                        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <input id="studSpec" name="spec" type="hidden" value="" required />
                        <div class="form-group">
                            <label class="form-label">Фамилия</label>
                            <input type="text" id="lastName" name="lastName" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Имя</label>
                            <input type="text" id="firstName" name="firstName" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Отчество</label>
                            <input type="text" id="middleName" name="middleName" class="form-control" />
                        </div>
                        <div class="form-group">
                            <input id="kurs" name="kurs" type="hidden" value="" required />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                        <button id="studentModalSubmit" type="submit" data-bs-dismiss="modal" class="btn btn-primary">Добавить</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}
